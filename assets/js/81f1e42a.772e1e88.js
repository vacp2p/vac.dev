"use strict";(self.webpackChunkvac_dev=self.webpackChunkvac_dev||[]).push([[8117],{28453:(e,o,s)=>{s.d(o,{R:()=>n,x:()=>i});var r=s(96540);const t={},a=r.createContext(t);function n(e){const o=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),r.createElement(a.Provider,{value:o},e.children)}},57817:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>p,contentTitle:()=>i,default:()=>l,frontMatter:()=>n,metadata:()=>r,toc:()=>c});var r=s(71455),t=s(74848),a=s(28453);const n={title:"Scaling libp2p GossipSub for Large Messages: An Evaluation of Performance Improvement Proposals",date:new Date("2025-08-12T12:00:00.000Z"),authors:"farooq",published:!0,slug:"gsub-perf-imp-comparison",categories:"research",discuss:"https://forum.vac.dev/t/vac-research-blog-performance-evaluation-of-gossipsub-improvement-proposals/556",toc_min_heading_level:2,toc_max_heading_level:5},i=void 0,p={authorsImageUrls:[void 0]},c=[];function u(e){const o={p:"p",...(0,a.R)(),...e.components};return(0,t.jsx)(o.p,{children:"The original GossipSub design emphasizes robustness, with less focus on message sizes.\r\nHowever, emerging use cases\u2014such as Ethereum's EIP-4844 and\r\ndata availability sampling (DAS) require rapid propagation of high data volumes,\r\noften in the form of large messages.\r\nMany ongoing research efforts attempt to find solutions\r\nfor efficiently forwarding large messages through the GossipSub network.\r\nThis post provides a concise overview and performance evaluation of some research initiatives\r\naimed at improving GossipSub to meet the performance needs of modern P2P networks."})}function l(e={}){const{wrapper:o}={...(0,a.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},71455:e=>{e.exports=JSON.parse('{"permalink":"/rlog/gsub-perf-imp-comparison","source":"@site/rlog/2025-08-12-gsub-perf-imp-comparison.mdx","title":"Scaling libp2p GossipSub for Large Messages: An Evaluation of Performance Improvement Proposals","description":"The original GossipSub design emphasizes robustness, with less focus on message sizes.","date":"2025-08-12T12:00:00.000Z","tags":[],"readingTime":15.55,"hasTruncateMarker":true,"authors":[{"name":"Umar Farooq","github":"ufarooqstatus","key":"farooq","page":null}],"frontMatter":{"title":"Scaling libp2p GossipSub for Large Messages: An Evaluation of Performance Improvement Proposals","date":"2025-08-12T12:00:00.000Z","authors":"farooq","published":true,"slug":"gsub-perf-imp-comparison","categories":"research","discuss":"https://forum.vac.dev/t/vac-research-blog-performance-evaluation-of-gossipsub-improvement-proposals/556","toc_min_heading_level":2,"toc_max_heading_level":5},"unlisted":false,"prevItem":{"title":"Decentralized Message Layer Security (De-MLS) with Waku","permalink":"/rlog/de-mls-with-waku"},"nextItem":{"title":"Zerokit optimizations: A performance journey","permalink":"/rlog/2025-zerokit-perf"}}')}}]);